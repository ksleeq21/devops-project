Parameters:
  DefaultVpcId:
    Description: Default VPC Id
    Type: String

  DefaultSubnetId:
    Description: Default Subnet Id
    Type: String

  KopsServerImageId:
    Description: Image Id for Kops EC2 Instance
    Type: String

  JenkinsServerImageId:
    Description: Image Id for Jenkins EC2 Instance
    Type: String

  ServerInstanceType:
    Description: EC2 Instance Type for Jenkins Server
    Type: String
  
  KopsServerKeyName:
    Description: Key name for SSH connection
    Type: String

  JenkinsServerKeyName:
    Description: Key name for SSH connection
    Type: String

Resources:
  KopsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: "Security Group for Kops"
      GroupName: kops-sg
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      VpcId:
        Ref: DefaultVpcId

  JenkinsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: "Security Group for Jenkins"
      GroupName: jenkins-sg
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      VpcId:
        Ref: DefaultVpcId
  
  KopsServer:
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: 
        Ref: KopsServerImageId
      InstanceType: 
        Ref: ServerInstanceType
      KeyName:
        Ref: KopsServerKeyName
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: KopsSecurityGroup
          SubnetId: 
            Ref: DefaultSubnetId
      Tags:
        -
          Key: "Name"
          Value: "kops-server"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          echo "Install packages for Kops Server"
          yum -y update 
          yum -y install jq 
          yum -y install python3
          echo "Install awscli"
          pip3 install awscli --upgrade
          echo "Install kubectl"
          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl
          kubectl version --client
          echo "Install eksctl"
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          mv /tmp/eksctl /usr/local/bin

  JenkinsServer: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: 
        Ref: JenkinsServerImageId
      InstanceType: 
        Ref: ServerInstanceType
      KeyName:
        Ref: JenkinsServerKeyName
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: JenkinsSecurityGroup
          SubnetId: 
            Ref: DefaultSubnetId
      Tags:
        -
          Key: "Name"
          Value: "jenkins-server"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
          echo "Install packages for Jenkins Server"
          yum -y update
          echo "Install hadolint"
          wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.17.5/hadolint-Linux-x86_64 && chmod +x /bin/hadolint
          echo "Install Node.js"
          yum install -y gcc-c++ make
          curl -sL https://rpm.nodesource.com/setup_12.x | sudo -E bash -
          yum install -y nodejs
          node -v 
          echo "Install eslint"
          npm install -g eslint
          echo "Install jq"
          yum -y install jq
          echo "Install Python3"
          yum -y install python3
          echo "Install Jenkins"
          yum -y install java
          wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
          rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key
          yum -y install jenkins
          service jenkins start
          chkconfig jenkins on
          echo "Install Docker"
          yum -y install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-selinux-17.03.0.ce-1.el7.centos.noarch.rpm
          yum -y install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.2.0-1.2.beta.2.el7.x86_64.rpm
          yum -y install https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-17.03.0.ce-1.el7.centos.x86_64.rpm
          systemctl start docker
          echo "Add jenkins to docker group"
          usermod -a -G docker jenkins
          echo "Restart jenkins"
          service jenkins start
          
Outputs:

  KopsPublicDNS: 
    Description: The public host name of Kops server
    Value:
      !GetAtt KopsServer.PublicDnsName
    Export:
      Name: KopsServerPublicDNS

  JenkinsPublicDNS: 
    Description: The public host name of Jenkins server
    Value:
      !GetAtt JenkinsServer.PublicDnsName
    Export:
      Name: JenkinsServerPublicDNS

  JenkinsDashboardAddress: 
    Description: The address of Jenkins dashboard
    Value:
        !Sub "http://${JenkinsServer.PublicDnsName}:8080"
    Export:
        Name: JenkinsDashboardAddress
